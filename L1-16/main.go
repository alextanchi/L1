package main

import "fmt"

func main() {
	arr := []int{5, 4, 1, 2, 203, 1, 333, 6}
	arr = quickSort(arr, 0, len(arr)-1)
	fmt.Println(arr)
}
func quickSort(arr []int, left int, right int) []int {
	if left >= right { //Проверяем, нужно ли сортировать массив. Если массив содержит только один элемент или меньше,
		return arr // то он уже отсортирован, и функция возвращает его без изменений. Если мы не проверим это условие,
		// то функция будет бесконечно вызывать саму себя, что приведет к ошибке.
	}

	l := left
	r := right
	mid := arr[(left+right)/2] //ищем "центр"

	for l <= r { //запускаем цикл, выполняющий сортировку
		for arr[l] < mid { //Ищем значения меньше 'центра'
			l++
		}
		for arr[r] > mid { //Ищем значения больше 'центра'
			r--
		}
		if l <= r { //если условие выполняется, меняем значения местами
			arr[l], arr[r] = arr[r], arr[l]
			l++
			r--
		}
	}
	//Этот фрагмент кода рекурсивно вызывает функцию quickSort для двух подмассивов,
	//которые были получены в результате разделения исходного массива
	//на две части вокруг центра (mid).

	quickSort(arr, left, r)
	quickSort(arr, l, right)

	return arr
}
